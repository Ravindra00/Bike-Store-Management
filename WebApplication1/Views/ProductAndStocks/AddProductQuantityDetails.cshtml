@*@Html.ValidationSummary(false)*@
@*@model WebApplication1.ViewModel.ProductsModel*@
@model ViewModels.ProductsModel

@{
    ViewBag.Title = "Student";
}
<style>
    .error {
        color: red;
    }
</style>
@using (Html.BeginForm("AddProductQuantityDetails", "ProductAndStocks", FormMethod.Post))
{
    <div class="container">
        <div class="row">

            <div class="form-group">
                @*@Html.HiddenFor(x => x.StoreId)*@
                <label>Store Id</label>
                @Html.TextBoxFor(x => x.StoreId, new { @type = "number", @class = "form-control", @placeholder = "Enter Store ID" })
                @Html.ValidationMessageFor(x => x.StoreId, "", new { @class = "error" })
            </div>
            <div class="form-group">
                <label>product Id</label>
                @Html.TextBoxFor(x => x.ProductId, new { @type = "number", @class = "form-control", @placeholder = "Enter Product Id" })
                @Html.ValidationMessageFor(x => x.ProductId, "", new { @class = "error" })
            </div>

            <div class="form-group">
                <label>Product Name</label>
                @Html.TextBoxFor(x => x.ProductName, new { @class = "form-control", @placeholder = "Enter product Name" })
                @Html.ValidationMessageFor(x => x.ProductName, "", new { @class = "error" })

            </div>

            <div class="form-group">
                <label>Brand Id</label>
                @Html.TextBoxFor(x => x.BrandId, new { @type = "number", @class = "form-control", @placeholder = "Enter Brand ID" })
                @Html.ValidationMessageFor(x => x.BrandId, "", new { @class = "error" })

            </div>

            <div class="form-group">
                <label>Category Id</label>
                @Html.TextBoxFor(x => x.CategoryId, new { @type = "number", @class = "form-control", @placeholder = "Enter category Id" })
                @Html.ValidationMessageFor(x => x.CategoryId, "", new { @class = "error" })

            </div>

            <div class="form-group">
                <label>Model Year</label>
                @Html.TextBoxFor(x => x.ModelYear, new { @type = "number", @class = "form-control", @placeholder = "Enter Model year" })
                @Html.ValidationMessageFor(x => x.ModelYear, "", new { @class = "error" })

            </div>

            <div class="form-group">
                <label>List price</label>
                @Html.TextBoxFor(x => x.ListPrice, new { @type = "number", @class = "form-control", @placeholder = "Enter list Price" })
                @Html.ValidationMessageFor(x => x.ListPrice, "", new { @class = "error" })

            </div>

            <div class="form-group">
                <label>Quantity</label>
                @Html.TextBoxFor(x => x.Quantity, new { @type = "number", @class = "form-control", @placeholder = "Enter Quantity" })
                @Html.ValidationMessageFor(x => x.Quantity, "", new { @class = "error" })

            </div>
            <div>
                    <button type="submit" class="btn btn-success">add</button>
            </div>
        </div>
    </div>
    @*@Html.ValidationSummary(true, "Please fix the following error and then submit the form")*@

}


